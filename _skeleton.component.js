import { SkeletonArcher } from './skeleton-archer.prototype.js'

// ------------------------------------------------------------
// Schema
// ------------------------------------------------------------
const HTML = /*html*/ `

`

const CSS = ''

const PROPS = {}

const RELS = {}

const ARIA = {}

// ------------------------------------------------------------
// Prototype
// ------------------------------------------------------------
export class __SKELETON__ extends SkeletonArcher {
  constructor() {
    super(HTML, CSS, PROPS, RELS, ARIA)
  }

  // ------------------------------------------------------------
  // Methods
  // ------------------------------------------------------------

  // ------------------------------------------------------------
  // Events
  // ------------------------------------------------------------

  // ------------------------------------------------------------
  // Variants
  // ------------------------------------------------------------

  // ------------------------------------------------------------
  // Lifecycle
  // ------------------------------------------------------------
  connectedCallback() {}

  disconnectedCallback() {}

  static get observedAttributes() {
    let prArr = []
    for (const prop in PROPS) {
      prArr.push(prop.replace(/[A-Z]/g, (m) => '-' + m.toLowerCase()))
    }

    return prArr
  }

  attributeChangedCallback(name, oldVal, newVal) {
    if (oldVal && oldVal !== newVal) {
      //
    }
  }

  // ------------------------------------------------------------
  // Render
  // ------------------------------------------------------------
  _render() {}

  _refresh() {}
}

// ------------------------------------------------------------
// Register
// ------------------------------------------------------------
customElements.define('__SKELETON__', __SKELETON__)
